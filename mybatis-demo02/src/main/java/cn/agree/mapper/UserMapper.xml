<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.agree.mapper.UserMapper">
    <!-- 查询所有用户 -->
    <select id="findAll" resultType="cn.agree.domain.User">
        SELECT * from user
    </select>

    <!-- 查询单个用户 -->
    <select id="findOne" resultType="cn.agree.domain.User">
        select * from user where id = 2;
    </select>

    <!-- 添加用户 -->

  <!--  keyColumn: 要查询的自增的列名
    keyProperty: 将返回值赋值给User对象的id属性
    resultType: 返回值的类型
    order: 表示selectKey里面SQL语句和它外面的SQL语句执行顺序
    After: 外面的Sql先执行
    Before: selectKey里面的SQL先执行-->

    <insert id="saveUser" parameterType="cn.agree.domain.User">
        <selectKey keyColumn="id" keyProperty="id" resultType="java.lang.Integer" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO user(username, birthday, sex, address) VALUES (#{username}, #{birthday}, #{sex}, #{address})
    </insert>

    <!-- 修改用户 -->
    <update id="updateUser" parameterType="cn.agree.domain.User">
        UPDATE user SET username=#{username}, birthday=#{birthday}, sex=#{sex},address=#{address} where id=#{id}
    </update>



    <!-- 删除用户 -->
    <delete id="deleteUser" parameterType="java.lang.Integer">
        DELETE FROM user WHERE id=#{id}
    </delete>

    <!-- 模糊查询 -->
    <select id="findUserByUsername" parameterType="java.lang.String" resultType="cn.agree.domain.User">
      SELECT * FROM user WHERE username LIKE '${value}'
    </select>

    <!-- parameterType 和resultMap学习  -->
    <resultMap id="UserResultMap" type="cn.agree.domain.User">
        <id column="id_" property="id" />
        <result column="username_" property="username" />
        <result column="birthday_" property="birthday" />
        <result column="sex_" property="sex" />
        <result column="address_" property="address" />
    </resultMap>

    <!--动态SQL-->
 <!--   <select id="findByVo" parameterType="cn.agree.domain.QueryVo" resultType="cn.agree.domain.User">
        SELECT id, username, birthday, sex, address FROM user WHERE 1 = 1
        <if test="user.id!=null">
            AND id=#{user.id}
        </if>
        <if test="user.username!=null and user.username!=''">
            AND username=#{user.username}
        </if>
    </select>-->

    <!-- 动态SQL的另外一种写法  -->
       <select id="findByVo" parameterType="cn.agree.domain.QueryVo" resultType="cn.agree.domain.User">
        SELECT id, username, birthday, sex, address FROM user
        <where>
            <if test="user.id!=null">
                AND id=#{user.id}
            </if>
            <if test="user.username!=null and user.username!=''">
                AND username=#{user.username}
            </if>
        </where>

    </select>

    <!--resultType学习-->
    <select id="findUserCount" resultType="java.lang.Integer">
        SELECT count(*) FROM user;
    </select>

</mapper>
